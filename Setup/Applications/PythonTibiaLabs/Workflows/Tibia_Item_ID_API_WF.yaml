harnessApiVersion: '1.0'
type: ROLLING
concurrencyStrategy: INFRA
description: This WF will deploy our Tibia API
envName: prod
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupIds:
  - ZpzNdGbbS4CFtLNaFZ1kFw
phases:
- type: KUBERNETES
  computeProviderName: CS - Gabs - Kubernetes Cluster - GCP
  daemonSet: false
  infraDefinitionName: gcp_k8s_gabs_cluster_prod
  name: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    steps:
    - type: SHELL_SCRIPT
      name: Check if MongoDB SVC exists
      properties:
        commandPath: null
        connectionAttributes: null
        executeOnDelegate: true
        host: null
        outputVars: SVC_NAME
        publishAsVar: true
        scriptString: |+
          #!/bin/bash

          echo "MONGODB SERVICE EXPOSER"


          echo "GETTING MONGODB SVC NAME"
          svc_name=$(kubectl get svc -n ${infra.kubernetes.namespace} -o wide | grep 27017 | awk '{print $1}')

          if [ -z "$svc_name" ]
          then
                echo "Could not find the MongoDB Service. Aborting..."
                exit 1
          else
                echo "MongoDB Service found!"
                echo "SVC NAME: $svc_name"
          fi

          export SVC_NAME=$svc_name

        scriptType: BASH
        secretOutputVars: ''
        sshKeyRef: null
        sweepingOutputName: MONGODB_SERVICE
        sweepingOutputScope: WORKFLOW
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    - type: K8S_DEPLOYMENT_ROLLING
      name: Rollout Deployment
      properties:
        stateTimeoutInMinutes: 10
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Verify
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: Tibia_Item_ID_API_Service
  statefulSet: false
rollbackPhases:
- type: KUBERNETES
  computeProviderName: CS - Gabs - Kubernetes Cluster - GCP
  daemonSet: false
  infraDefinitionName: gcp_k8s_gabs_cluster_prod
  name: Rollback Rolling
  phaseNameForRollback: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    phaseStepNameForRollback: Deploy
    statusForRollback: SUCCESS
    steps:
    - type: K8S_DEPLOYMENT_ROLLING_ROLLBACK
      name: Rollback Deployment
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    phaseStepNameForRollback: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: Tibia_Item_ID_API_Service
  statefulSet: false
templatized: false
