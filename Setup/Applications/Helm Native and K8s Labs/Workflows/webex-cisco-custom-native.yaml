harnessApiVersion: '1.0'
type: BASIC
concurrencyStrategy: INFRA
envName: dev
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- type: HELM
  computeProviderName: CS - Gabs - AWS - EKS - CS Admin
  daemonSet: false
  infraDefinitionName: EKS-SA-EAST-1-HELM-NATIVE
  name: Phase 1
  phaseSteps:
  - type: HELM_DEPLOY
    name: Deploy Containers
    stepSkipStrategies:
    - assertionExpression: 1 == 0
      scope: SPECIFIC_STEPS
      steps:
      - Helm Deploy
    steps:
    - type: SHELL_SCRIPT
      name: Create Namespace Workaround
      properties:
        commandPath: null
        connectionAttributeName: null
        delegateSelectors:
        - eks-final-sa-east-1
        executeOnDelegate: true
        host: null
        includeInfraSelectors: false
        outputVars: ''
        publishAsVar: false
        scriptString: |-
          #kubectl create ns ${infra.kubernetes.namespace} 2>/dev/null | true

          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Namespace
          metadata:
           name: ${infra.kubernetes.namespace}
          EOF
        scriptType: BASH
        sshKeyRefName: null
        sweepingOutputName: null
        sweepingOutputScope: null
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    - type: HELM_DEPLOY
      name: Helm Deploy
      properties:
        commandFlags: ''
        gitFileConfig: null
        helmReleaseNamePrefix: ${service.name}-${env.name}-${infra.helm.shortId}
        steadyStateTimeout: 10
        templateUuid: null
        templateVariables: null
        templateVersion: null
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: webex-cisco-custom-native
  statefulSet: false
  templateExpressions:
  - expression: ${Service}
    fieldName: serviceId
    metadata:
    - name: relatedField
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: SERVICE
rollbackPhases:
- type: HELM
  computeProviderName: CS - Gabs - AWS - EKS - CS Admin
  daemonSet: false
  infraDefinitionName: EKS-SA-EAST-1-HELM-NATIVE
  name: Rollback Phase 1
  phaseNameForRollback: Phase 1
  phaseSteps:
  - type: HELM_DEPLOY
    name: Deploy Containers
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    steps:
    - type: HELM_ROLLBACK
      name: Helm Rollback
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: webex-cisco-custom-native
  statefulSet: false
  templateExpressions:
  - expression: ${Service}
    fieldName: serviceId
    metadata:
    - name: relatedField
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: SERVICE
templateExpressions:
- expression: ${Service}
  fieldName: serviceId
  metadata:
  - name: relatedField
  - name: artifactType
    value: DOCKER
  - name: entityType
    value: SERVICE
templatized: true
userVariables:
- type: ENTITY
  description: Variable for Service entity
  fixed: false
  mandatory: true
  name: Service
