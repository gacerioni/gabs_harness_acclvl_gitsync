harnessApiVersion: '1.0'
type: ROLLING
concurrencyStrategy: INFRA
envName: dev
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- type: KUBERNETES
  computeProviderName: CS - Gabs - Kubernetes Cluster - MBP
  daemonSet: false
  infraDefinitionName: mbp_k8s
  name: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    steps:
    - type: SHELL_SCRIPT
      name: shell script - raise service name and chg_number in the pipeline context
      properties:
        commandPath: null
        connectionAttributeName: null
        executeOnDelegate: true
        host: null
        includeInfraSelectors: false
        outputVars: SVC_NAME,CHG_NUMBER
        publishAsVar: true
        scriptString: |-
          #!/bin/bash

          SVC_NAME="${service.name}"
          CHG_NUMBER="${workflow.variables.CHG}"
        scriptType: BASH
        secretOutputVars: ''
        sshKeyRefName: null
        sweepingOutputName: HELPER
        sweepingOutputScope: PIPELINE
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Verify
    steps:
    - type: SHELL_SCRIPT
      name: Shell Script
      properties:
        commandPath: null
        connectionAttributeName: null
        delegateSelectors:
        - ec2-final-sa-east-1
        executeOnDelegate: true
        host: null
        includeInfraSelectors: false
        outputVars: ''
        publishAsVar: false
        scriptString: |-
          cd /root/harness-service-now/

          CHANGE_NUMBER=${context.HELPER.CHG_NUMBER}
          CMDB_CI_NAME=${context.HELPER.SVC_NAME}
          SNOW_USER=svc_harness_CD
          SNOW_PASS=${secrets.getValue("harness_user")}
          URL_SNOW="https://c6bank.service-now.com"

          echo "########"
          echo "${CHANGE_NUMBER}"
          echo "${CMDB_CI_NAME}"
          echo "${SNOW_USER}"
          echo "${SNOW_PASS}"
          echo "${URL_SNOW}"
          echo "########"

          CHG_RESULT="curl -s "$URL_SNOW" --request GET --header "Accept:application/json" --user "$SNOW_USER":"$SNOW_PASS""
          echo "########DANGER########"
          echo "PRINTING PWD DIRECTLY"
          echo ${secrets.getValue("harness_user")}
          echo "PRINTING RAW PWD:"
          echo $SNOW_PASS
          echo "PRINTING THE CURL COMMAND:"
          echo $CHG_RESULT
          echo "#######################"

          export HARNESS_APPROVAL_STATUS="APPROVED"
        scriptType: BASH
        sshKeyRefName: null
        sweepingOutputName: null
        sweepingOutputScope: null
        templateExpressions: null
        templateVariables: ''
        timeoutMillis: 60000
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: C6_Helm_Fake
  statefulSet: false
  templateExpressions:
  - expression: ${Service}
    fieldName: serviceId
    metadata:
    - name: relatedField
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: SERVICE
  - expression: ${InfraDefinition_KUBERNETES}
    fieldName: infraDefinitionId
    metadata:
    - name: relatedField
    - name: entityType
      value: INFRASTRUCTURE_DEFINITION
rollbackPhases:
- type: KUBERNETES
  computeProviderName: CS - Gabs - Kubernetes Cluster - MBP
  daemonSet: false
  infraDefinitionName: mbp_k8s
  name: Rollback Rolling
  phaseNameForRollback: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    phaseStepNameForRollback: Deploy
    statusForRollback: SUCCESS
    steps:
    - type: K8S_DEPLOYMENT_ROLLING_ROLLBACK
      name: Rollback Deployment
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    phaseStepNameForRollback: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: C6_Helm_Fake
  statefulSet: false
  templateExpressions:
  - expression: ${Service}
    fieldName: serviceId
    metadata:
    - name: relatedField
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: SERVICE
  - expression: ${InfraDefinition_KUBERNETES}
    fieldName: infraDefinitionId
    metadata:
    - name: relatedField
    - name: entityType
      value: INFRASTRUCTURE_DEFINITION
templateExpressions:
- expression: ${Environment}
  fieldName: envId
  metadata:
  - name: relatedField
    value: ${InfraDefinition_KUBERNETES}
  - name: entityType
    value: ENVIRONMENT
- expression: ${Service}
  fieldName: serviceId
  metadata:
  - name: relatedField
  - name: artifactType
    value: DOCKER
  - name: entityType
    value: SERVICE
- expression: ${InfraDefinition_KUBERNETES}
  fieldName: infraDefinitionId
  metadata:
  - name: relatedField
  - name: entityType
    value: INFRASTRUCTURE_DEFINITION
templatized: true
userVariables:
- type: ENTITY
  description: Variable for Environment entity
  fixed: false
  mandatory: true
  name: Environment
- type: ENTITY
  description: Variable for Service entity in Rollback Rolling
  fixed: false
  mandatory: true
  name: Service
- type: ENTITY
  description: Variable for Infrastructure Definition entity in Rollback Rolling
  fixed: false
  mandatory: true
  name: InfraDefinition_KUBERNETES
- type: TEXT
  fixed: false
  mandatory: true
  name: CHG
