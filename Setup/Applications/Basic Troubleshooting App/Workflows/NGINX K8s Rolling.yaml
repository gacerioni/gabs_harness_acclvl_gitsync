harnessApiVersion: '1.0'
type: ROLLING
concurrencyStrategy: INFRA
envName: prod
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- type: KUBERNETES
  computeProviderName: CS - Gabs - Kubernetes Cluster - GCP
  daemonSet: false
  infraDefinitionName: gabs_gcp_k8s
  name: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    steps:
    - type: K8S_DEPLOYMENT_ROLLING
      name: Rollout Deployment
    - type: SHELL_SCRIPT
      name: Bouncing the underlying Pods from the Deployment
      properties:
        commandPath: null
        connectionAttributeName: null
        executeOnDelegate: true
        host: null
        includeInfraSelectors: true
        outputVars: ''
        publishAsVar: false
        scriptString: |-
          #!/bin/bash

          echo "This is the suggested Pod Bouncer by Gabs."

          echo "Getting the namespace at runtime..."
          currentNamespace="${infra.kubernetes.namespace}"
          echo "Current Namespace: $currentNamespace"
          echo "Done!"

          echo "Getting the release-name at runtime..."
          currentRelease="'release-${infra.kubernetes.infraId}'"
          echo "Current Release: $currentRelease"
          echo "Done!"

          echo "Getting the Deployment name at runtime..."
          currentDeployment=$(kubectl get deployment -n $currentNamespace -o=jsonpath="{.items[?(@.spec.template.metadata.labels.harness\.io\/release-name==$currentRelease)].metadata.name}")
          echo "Current Deployment Name: $currentDeployment"
          echo "Done!"

          echo "Bouncing that Deployment underlying Pods..."
          kubectl rollout restart deployment $currentDeployment -n $currentNamespace
          echo "Done!"
        scriptType: BASH
        sshKeyRefName: null
        sweepingOutputName: null
        sweepingOutputScope: null
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Verify
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: basic_nginx_k8s
  statefulSet: false
rollbackPhases:
- type: KUBERNETES
  computeProviderName: CS - Gabs - Kubernetes Cluster - GCP
  daemonSet: false
  infraDefinitionName: gabs_gcp_k8s
  name: Rollback Rolling
  phaseNameForRollback: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    phaseStepNameForRollback: Deploy
    statusForRollback: SUCCESS
    steps:
    - type: K8S_DEPLOYMENT_ROLLING_ROLLBACK
      name: Rollback Deployment
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    phaseStepNameForRollback: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: basic_nginx_k8s
  statefulSet: false
templatized: false
