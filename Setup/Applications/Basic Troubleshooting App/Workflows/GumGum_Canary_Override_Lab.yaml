harnessApiVersion: '1.0'
type: CANARY
concurrencyStrategy: INFRA
envName: prod
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- type: KUBERNETES
  computeProviderName: CS - Gabs - Kubernetes Cluster - GCP
  daemonSet: false
  infraDefinitionName: gabs_gcp_k8s
  name: Canary
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Verify
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: GumGum_InfraDef_Override
  statefulSet: false
  templateExpressions:
  - expression: ${InfraDefinition_Kubernetes}
    fieldName: infraDefinitionId
    metadata:
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: INFRASTRUCTURE_DEFINITION
preDeploymentSteps:
- type: SHELL_SCRIPT
  name: Shell Script
  properties:
    commandPath: null
    connectionAttributeName: null
    executeOnDelegate: true
    host: null
    outputVars: appEnv1,appEnv2
    publishAsVar: true
    scriptString: |-
      #!/bin/bash
      #echo Using infrastructure definition [${infra.name}]
      echo Using infrastructure definition [${workflow.variables.InfraDefinition_Kubernetes}]
      echo

      appEnv1=${serviceVariable.appEnv1}
      appEnv2=${serviceVariable.appEnv2}

      if [[ "${infra.name}" == gabs_gcp_k8s ]]; then

        appEnv2=itsaGCPdeployment

      elif [[ "${infra.name}" == gabs_mbp_k8s ]]; then

        appEnv1=${serviceVariable.infra3_appEnv1}
        appEnv2=itsaGCPdeployment

      fi

      echo Setting appEnv1 to [$appEnv1]
      echo Setting appEnv2 to [$appEnv2]
      echo
    scriptType: BASH
    secretOutputVars: ''
    sshKeyRefName: null
    sweepingOutputName: override
    sweepingOutputScope: PIPELINE
    templateExpressions: null
    templateUuid: null
    templateVariables: null
    templateVersion: null
    timeoutMillis: 60000
rollbackPhases:
- type: KUBERNETES
  computeProviderName: CS - Gabs - Kubernetes Cluster - GCP
  daemonSet: false
  infraDefinitionName: gabs_gcp_k8s
  name: Rollback Canary
  phaseNameForRollback: Canary
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    phaseStepNameForRollback: Deploy
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    phaseStepNameForRollback: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: GumGum_InfraDef_Override
  statefulSet: false
  templateExpressions:
  - expression: ${InfraDefinition_Kubernetes}
    fieldName: infraDefinitionId
    metadata:
    - name: artifactType
      value: DOCKER
    - name: entityType
      value: INFRASTRUCTURE_DEFINITION
templateExpressions:
- expression: ${Environment}
  fieldName: envId
  metadata:
  - name: relatedField
  - name: entityType
    value: ENVIRONMENT
templatized: true
userVariables:
- type: ENTITY
  description: Variable for Environment entity
  fixed: false
  mandatory: true
  name: Environment
- type: ENTITY
  description: Variable for Infrastructure Definition entity in Rollback Canary
  fixed: false
  mandatory: true
  name: InfraDefinition_Kubernetes
